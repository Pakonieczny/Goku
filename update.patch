diff --git a/Index.html b/Index.html
index 89abcdef..cdef0123 100644
--- a/Index.html
+++ b/Index.html
@@ -20,6 +20,7 @@ let photoMeta = [];     // AI-generated metadata for alt_text
 // ADDED GLOBAL VARIABLE FOR DRAGGING:
 let draggedIndex = null;
 let photoIds = [];
+let nonReservedUploadedFlags = [];
 // ADDED GLOBAL VARIABLE FOR CROP INDEX AND Cropper instance:
 let currentCropIndex = null;
 let cropper = null;
@@
-            photoIds.push('img-' + Date.now() + '-' + i);
+            photoIds.push('img-' + Date.now() + '-' + i);
+            nonReservedUploadedFlags.push(false);
@@
-document.getElementById("uploadPhotoBtn").addEventListener("click", async () => {
-  const listingInput = document.getElementById("shopListings").value.trim();
-  if (!listingInput) {
-    M.toast({ html: "Please provide a listing URL or ID in 'My Etsy Shop Listings'." });
-    return;
-  }
-  let listingId;
-  if (/^\d+$/.test(listingInput)) {
-    listingId = listingInput;
-  } else {
-    const match = listingInput.match(/\/listing\/(\d+)/);
-    if (match) {
-      listingId = match[1];
-    } else {
-      M.toast({ html: "Invalid listing URL or ID." });
-      return;
-    }
-  }
-  if (previewImages.length === 0) {
-    M.toast({ html: "No images to upload. Please drag and drop images first." });
-    return;
-  }
-  for (let i = 0; i < previewImages.length; i++) {
-    const dataURL = previewImages[i];
-    const altText = photoMeta[i] || "";
-    const rankNumber = i + 1;
-    try {
-      const res = await fetch(dataURL);
-      const blob = await res.blob();
-      const formData = new FormData();
-      formData.append("listingId", listingId);
-      formData.append("token", accessToken);
-      formData.append("fileName", photoNames[i] || `uploaded_photo_${i}.jpg`);
-      formData.append("rank", rankNumber);
-      formData.append("alt_text", altText);
-      formData.append("file", blob, photoNames[i] || `uploaded_photo_${i}.jpg`);
-      const uploadUrl = `/.netlify/functions/imageUpload`;
-      const response = await fetch(uploadUrl, {
-        method: "POST",
-        body: formData
-      });
-      if (!response.ok) {
-        M.toast({ html: `Error uploading photo #${rankNumber}: ` + response.status });
-      } else {
-        M.toast({ html: `Photo #${rankNumber} uploaded with alt_text!` });
-      }
-    } catch (e) {
-      console.error(`Exception uploading photo #${rankNumber}:`, e);
-      M.toast({ html: `Exception uploading photo #${rankNumber}: ${e.message}` });
-    }
-  }
-});
+document.getElementById("uploadPhotoBtn").addEventListener("click", async () => {
+  const listingInput = document.getElementById("shopListings").value.trim();
+  if (!listingInput) {
+    M.toast({ html: "Please provide a listing URL or ID in 'My Etsy Shop Listings'." });
+    return;
+  }
+  let listingId;
+  if (/^\d+$/.test(listingInput)) {
+    listingId = listingInput;
+  } else {
+    const match = listingInput.match(/\/listing\/(\d+)/);
+    if (match) {
+      listingId = match[1];
+    } else {
+      M.toast({ html: "Invalid listing URL or ID." });
+      return;
+    }
+  }
+  if (previewImages.length === 0) {
+    M.toast({ html: "No images to upload. Please drag and drop images first." });
+    return;
+  }
+  // Iterate over non-reserved photos and only upload if flag is false
+  for (let i = 0; i < previewImages.length; i++) {
+    if (!nonReservedUploadedFlags[i]) {
+      const dataURL = previewImages[i];
+      const altText = photoMeta[i] || "";
+      const rankNumber = i + 1;
+      try {
+        const res = await fetch(dataURL);
+        const blob = await res.blob();
+        const formData = new FormData();
+        formData.append("listingId", listingId);
+        formData.append("token", accessToken);
+        formData.append("fileName", photoNames[i] || `uploaded_photo_${i}.jpg`);
+        formData.append("rank", rankNumber);
+        formData.append("alt_text", altText);
+        formData.append("file", blob, photoNames[i] || `uploaded_photo_${i}.jpg`);
+        const uploadUrl = `/.netlify/functions/imageUpload`;
+        const response = await fetch(uploadUrl, {
+          method: "POST",
+          body: formData
+        });
+        if (!response.ok) {
+          M.toast({ html: `Error uploading photo #${rankNumber}: ` + response.status });
+        } else {
+          M.toast({ html: `Photo #${rankNumber} uploaded with alt_text!` });
+        }
+        nonReservedUploadedFlags[i] = true;
+      } catch (e) {
+        console.error(`Exception uploading photo #${rankNumber}:`, e);
+        M.toast({ html: `Exception uploading photo #${rankNumber}: ${e.message}` });
+      }
+    }
+  }
+});
